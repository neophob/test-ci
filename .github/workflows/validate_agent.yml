# required secrets:
# - DOCKER_USER: docker hub username
# - DOCKER_TOKEN: docker hub access token
# - DOCKER_REPO: docker repository in the ORGANISATION/IMAGENAME format
# - LEGALI_API_URL: agent URL
# - LEGALI_CLIENT_SECRET: guess!

name: Docker image

# keep it simple for now, create a new Docker image after each rebuild
on: [push]

jobs:
  build-agent-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Build
        run: |
          docker build -f docker/Dockerfile --tag ${{ secrets.DOCKER_REPO }}:latest .
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'legal-i/agent-example'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to Docker Hub
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'legal-i/agent-example'
        run: |
          docker push ${{ secrets.DOCKER_REPO }}:latest

  test-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Start & Validate Agent
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_REPO }}:latest
          options: -e LEGALI_API_URL=${{ secrets.LEGALI_API_URL }} -e LEGALI_CLIENT_SECRET=${{ secrets.LEGALI_CLIENT_SECRET }}
          run: |
            echo "# START AGENT"
            env
            nohup java -XX:MaxRAMPercentage=90.0 org.springframework.boot.loader.JarLauncher > /tmp/tmp.log 2>&1 &
            sleep 60
            pkill -e java
            echo "DONE - Looking for 'PingPong Event received' in log file..."
            cat /tmp/tmp.log
            if  grep -q "PingPong Event received" "/tmp/tmp.log" ; then
              exit 0;
            else
              exit 1;
            fi
