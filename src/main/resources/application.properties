# Example Connector Config
legali.example.iterations=1
spring.task.execution.pool.max-size=1
spring.task.execution.pool.core-size=1

# Run cleanup round to delete test legal cases
legali.example.cleanup=false

# Disable processing pipeline for development (do not use in production)
legali.default-metadata.legali.pipeline.disabled=true
legali.default-metadata.legali.uploader=example-agent

# Connection to the legal-i Cloud
legali.auth-url=https://auth.dev.legal-i.ch
legali.api-url=http://localhost:8180/api/v1
legali.client-id=OyVpI0jSOOyKsrFrT1ApFXYfc3RMzSMV
legali.client-secret=1KzHP_5zuMWq4m9A11PKVMkKSvuQVfOX35iH248VgpROkAQsWrLmZOJeCkZr_JKJ

# File Upload: CLOUDFRONT or FILE_SERVICE
# Use cloudfront if possible to avoid proxying via the legal-i file service.
# This might need additional outgoing network access to AWS.
legali.file-upload-type=FILE_SERVICE
#legali.request-connection-timeout-seconds=30
#legali.max-connection-retries=5
#legali.request-read-timeout-seconds=90
#legali.max-failed-heartbeats=5

# Proxy setup
#legali.http-proxy-host=localhost
#legali.http-proxy-port=3128

# Logging and Debugging
logging.level.root=INFO
logging.level.ch.legali.sdk.example=INFO
logging.level.ch.legali.sdk.sdk=INFO
logging.level.ch.legali.sdk.sdk.internal=WARN

# Debug HTTP connection
#logging.level.feign = DEBUG
#legali.feign-log-level=FULL

# Monitoring
server.port=8085
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoint.health.group.readiness.include=readinessState,agent
